{
  "version": 3,
  "sources": ["../vue3-google-oauth2/index.js", "dep:vue3-google-oauth2"],
  "sourcesContent": ["import { reactive, readonly } from \"vue\";\nlet Vue3GoogleOauth;\nVue3GoogleOauth = reactive({\n  isInit: false,\n  isAuthorized: false,\n})\nconst googleAuth = (function () {\n\n  function installClient() {\n    const apiUrl = 'https://apis.google.com/js/api.js';\n    return new Promise((resolve) => {\n      let script = document.createElement('script');\n      script.src = apiUrl;\n      script.onreadystatechange = script.onload = function () {\n        if (!script.readyState || /loaded|complete/.test(script.readyState)) {\n          setTimeout(function () {\n            resolve()\n          }, 500)\n        }\n      }\n      document.getElementsByTagName('head')[0].appendChild(script);\n    })\n  }\n\n  function initClient(config) {\n    return new Promise((resolve, reject) => {\n      window.gapi.load('auth2', () => {\n        window.gapi.auth2.init(config)\n          .then(() => {\n            resolve(window.gapi);\n          }).catch((error) => {\n            reject(error);\n          })\n      })\n    })\n\n  }\n\n  function Auth() {\n    if (!(this instanceof Auth))\n      return new Auth();\n    this.instance = null; /* window.gapi.auth2.getAuthInstance() */\n    this.load = (config) => {\n      installClient()\n        .then(() => {\n          return initClient(config)\n        })\n        .then((gapi) => {\n          this.instance = gapi.auth2.getAuthInstance();\n\n          this.prompt = config.prompt;\n          Vue3GoogleOauth.instance = gapi.auth2.getAuthInstance();\n          Vue3GoogleOauth.isInit = true;\n          Vue3GoogleOauth.isAuthorized = this.instance.isSignedIn.get();\n        }).catch((error) => {\n          console.error(error);\n        })\n    };\n\n    this.signIn = () => {\n      return new Promise((resolve, reject) => {\n        if (!this.instance) {\n          reject(false)\n          return\n        }\n        this.instance.signIn()\n          .then(googleUser => {\n            Vue3GoogleOauth.isAuthorized = this.instance.isSignedIn.get();\n            resolve(googleUser);\n          })\n          .catch(error => {\n            reject(error);\n          })\n      })\n    };\n\n    this.getAuthCode = () => {\n      return new Promise((resolve, reject) => {\n        if (!this.instance) {\n          reject(false)\n          return\n        }\n        this.instance.grantOfflineAccess({ prompt: this.prompt })\n          .then(function (resp) {\n            resolve(resp.code)\n          })\n          .catch(function (error) {\n            reject(error)\n          })\n      })\n    };\n\n    this.signOut = () => {\n      return new Promise((resolve, reject) => {\n        if (!this.instance) {\n          reject(false)\n          return\n        }\n        this.instance.signOut()\n          .then(() => {\n            Vue3GoogleOauth.isAuthorized = false;\n            resolve(true)\n          })\n          .catch(error => {\n            reject(error)\n          })\n      })\n    };\n  }\n\n  return new Auth()\n})();\n\nexport default {\n  install: (app, options) => {\n    /* eslint-disable */\n    //set config\n    let config = null\n    let defaultConfig = { scope: 'profile email', prompt: 'select_account' };\n    if (typeof options === 'object') {\n      config = Object.assign(defaultConfig, options);\n      if (!options.clientId) {\n        throw new Error('clientId is required');\n      }\n    } else {\n      throw new TypeError('invalid option type. Object type accepted only');\n    }\n\n    //Install Vue plugin\n    googleAuth.load(config);\n    app.config.globalProperties.$gAuth = googleAuth;\n    app.provide('Vue3GoogleOauth', readonly(Vue3GoogleOauth));\n\n  }\n}", "import d from \"./node_modules/vue3-google-oauth2/index.js\";export default d;"],
  "mappings": ";;;;;;;;AACA,IAAI;AACJ,kBAAkB,SAAS;AAAA,EACzB,QAAQ;AAAA,EACR,cAAc;AAAA;AAEhB,IAAM,aAAc,WAAY;AAE9B,2BAAyB;AACvB,UAAM,SAAS;AACf,WAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,UAAI,SAAS,SAAS,cAAc;AACpC,aAAO,MAAM;AACb,aAAO,qBAAqB,OAAO,SAAS,WAAY;AACtD,YAAI,CAAC,OAAO,cAAc,kBAAkB,KAAK,OAAO,aAAa;AACnE,qBAAW,WAAY;AACrB;AAAA,aACC;AAAA;AAAA;AAGP,eAAS,qBAAqB,QAAQ,GAAG,YAAY;AAAA;AAAA;AAIzD,sBAAoB,QAAQ;AAC1B,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,aAAO,KAAK,KAAK,SAAS,MAAM;AAC9B,eAAO,KAAK,MAAM,KAAK,QACpB,KAAK,MAAM;AACV,kBAAQ,OAAO;AAAA,WACd,MAAM,CAAC,UAAU;AAClB,iBAAO;AAAA;AAAA;AAAA;AAAA;AAOjB,kBAAgB;AACd,QAAI,CAAE,iBAAgB;AACpB,aAAO,IAAI;AACb,SAAK,WAAW;AAChB,SAAK,OAAO,CAAC,WAAW;AACtB,sBACG,KAAK,MAAM;AACV,eAAO,WAAW;AAAA,SAEnB,KAAK,CAAC,SAAS;AACd,aAAK,WAAW,KAAK,MAAM;AAE3B,aAAK,SAAS,OAAO;AACrB,wBAAgB,WAAW,KAAK,MAAM;AACtC,wBAAgB,SAAS;AACzB,wBAAgB,eAAe,KAAK,SAAS,WAAW;AAAA,SACvD,MAAM,CAAC,UAAU;AAClB,gBAAQ,MAAM;AAAA;AAAA;AAIpB,SAAK,SAAS,MAAM;AAClB,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,YAAI,CAAC,KAAK,UAAU;AAClB,iBAAO;AACP;AAAA;AAEF,aAAK,SAAS,SACX,KAAK,gBAAc;AAClB,0BAAgB,eAAe,KAAK,SAAS,WAAW;AACxD,kBAAQ;AAAA,WAET,MAAM,WAAS;AACd,iBAAO;AAAA;AAAA;AAAA;AAKf,SAAK,cAAc,MAAM;AACvB,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,YAAI,CAAC,KAAK,UAAU;AAClB,iBAAO;AACP;AAAA;AAEF,aAAK,SAAS,mBAAmB,EAAE,QAAQ,KAAK,UAC7C,KAAK,SAAU,MAAM;AACpB,kBAAQ,KAAK;AAAA,WAEd,MAAM,SAAU,OAAO;AACtB,iBAAO;AAAA;AAAA;AAAA;AAKf,SAAK,UAAU,MAAM;AACnB,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,YAAI,CAAC,KAAK,UAAU;AAClB,iBAAO;AACP;AAAA;AAEF,aAAK,SAAS,UACX,KAAK,MAAM;AACV,0BAAgB,eAAe;AAC/B,kBAAQ;AAAA,WAET,MAAM,WAAS;AACd,iBAAO;AAAA;AAAA;AAAA;AAAA;AAMjB,SAAO,IAAI;AAAA;AAGb,IAAO,6BAAQ;AAAA,EACb,SAAS,CAAC,KAAK,YAAY;AAGzB,QAAI,SAAS;AACb,QAAI,gBAAgB,EAAE,OAAO,iBAAiB,QAAQ;AACtD,QAAI,OAAO,YAAY,UAAU;AAC/B,eAAS,OAAO,OAAO,eAAe;AACtC,UAAI,CAAC,QAAQ,UAAU;AACrB,cAAM,IAAI,MAAM;AAAA;AAAA,WAEb;AACL,YAAM,IAAI,UAAU;AAAA;AAItB,eAAW,KAAK;AAChB,QAAI,OAAO,iBAAiB,SAAS;AACrC,QAAI,QAAQ,mBAAmB,SAAS;AAAA;AAAA;;;ACnIe,IAAO,8BAAQ;",
  "names": []
}
